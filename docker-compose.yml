version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - future-me

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - future-me

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=futureme
    
    ports:
      - "5433:5432"
    
    volumes:
      - data:/var/lib/postgresql/data/
    networks:
      - future-me
  
  api:
    build:
      context: .
      dockerfile: EmailSchedulerService/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - db
    environment:
      - DB_CONNECTION_STRING=Server=db;Port=5432;Database=futureme;User ID=postgres;Password=postgres;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80
      - KAFKA_URL=broker:29092
    networks:
      - future-me
  
  email-sender:
    build:
      context: .
      dockerfile: EmailSenderService/Dockerfile

    environment:
      - ASPNETCORE_URLS=http://+:80
      - KAFKA_URL=broker:29092

    networks:
      - future-me



volumes:
  data:

networks:
  future-me: